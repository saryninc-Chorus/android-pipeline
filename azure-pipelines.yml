variables:
  AseEj: $(Build.ArtifactStagingDirectory)/AseEj
  branches:
    include:
      - main


trigger:
  branches:
    include:
      - main

pool:
  name: 'AseEj'

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.0.x'
  inputs:
    version: '17'

    echo "Android Assembly on Azure Storm-arm"
    ./gradlew assembleRelease

  inputs:
    targetType: 'inline'
    script: |
      echo "Yo Android SDK installation"
      echo y | sdkmanager --install 'platforms;android-30'
      echo y | sdkmanager --install 'build-tools;30.0.3'
  
    - script: |
        echo "Set Android SDK Path"
        echo "ANDROID_SDK_ROOT=$(ANDROID_HOME)" >> $GITHUB_ENV

=======
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:

pool:
  vmImage: ubuntu-latest

steps:
  displayName: 'Run a one-line script'

    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
>>>>>>> 745f60d9afe1651c8eb9b9aa998ad3b7ef570136

variables:
  AseEj: $(Build.ArtifactStagingDirectory)/AseEj
  branches:
    include:
      - main

trigger:
  branches:
    include:
      - main

pool:
  name: 'AseEj'

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.0.x'
  inputs:
    version: '17'

    echo "Android Assembly on Azure Storm-arm"
    ./gradlew assembleRelease

  inputs:
    targetType: 'inline'
    script: |
      echo "Yo Android SDK installation"
      echo y | sdkmanager --install 'platforms;android-30'
      echo y | sdkmanager --install 'build-tools;30.0.3'
  
    - script: |
        echo "Set Android SDK Path"
        echo "ANDROID_SDK_ROOT=$(ANDROID_HOME)" >> $GITHUB_ENV
